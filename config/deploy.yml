# Kamal deployment configuration for Healthcare Alert System
service: healthcare-alerts

# Docker image configuration
image: healthcare-alerts/app

# Server configuration
servers:
  web:
    - <%= ENV['DEPLOY_SERVER_IP'] %>
  # Add more servers for scaling
  # - server2.example.com
  # - server3.example.com

# Docker registry
registry:
  username: <%= ENV['DOCKER_REGISTRY_USERNAME'] %>
  password:
    - DOCKER_REGISTRY_PASSWORD

# Environment configuration
env:
  clear:
    # App Configuration
    APP_ENV: production
    NODE_ENV: production
    
    # API Configuration
    EXPO_PUBLIC_API_URL: https://<%= ENV['DEPLOY_DOMAIN'] %>
    
    # PostHog Analytics
    EXPO_PUBLIC_POSTHOG_ENABLED: true
    EXPO_PUBLIC_POSTHOG_API_HOST: <%= ENV['POSTHOG_HOST'] || 'https://app.posthog.com' %>
    
    # WebSocket Configuration
    EXPO_PUBLIC_WS_URL: wss://<%= ENV['DEPLOY_DOMAIN'] %>/ws
    WEBSOCKET_PORT: 3002
    
    # Redis Configuration
    REDIS_URL: redis://redis:6379
  
  secret:
    # Database
    - DATABASE_URL
    
    # Auth Secrets
    - BETTER_AUTH_SECRET
    - BETTER_AUTH_URL
    
    # OAuth Providers
    - AUTH_GOOGLE_ID
    - AUTH_GOOGLE_SECRET
    
    # PostHog
    - EXPO_PUBLIC_POSTHOG_API_KEY
    - POSTHOG_API_KEY
    
    # Email Service
    - EMAIL_FROM
    - RESEND_API_KEY

# Container configuration
volumes:
  - "/var/run/docker.sock:/var/run/docker.sock"
  - "./uploads:/app/uploads"
  - "./logs:/app/logs"

# Deployment configuration
deploy_timeout: 600
drain_timeout: 30

# Asset bridging for static files
asset_path: /app/public

# Accessories (supporting services)
accessories:
  postgres:
    image: postgres:15-alpine
    host: <%= ENV['DEPLOY_SERVER_IP'] %>
    port: 5432
    env:
      clear:
        POSTGRES_DB: healthcare_prod
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
  
  redis:
    image: redis:7-alpine
    host: <%= ENV['DEPLOY_SERVER_IP'] %>
    port: 6379
    env:
      secret:
        - REDIS_PASSWORD
    volumes:
      - /var/lib/redis:/data
  
  websocket:
    image: healthcare-alerts/websocket
    host: <%= ENV['DEPLOY_SERVER_IP'] %>
    port: 3002
    env:
      clear:
        NODE_ENV: production
        PORT: 3002
      secret:
        - DATABASE_URL
        - REDIS_URL

# Container retention
retain_containers: 5

# Builder configuration
builder:
  multiarch: false
  cache:
    type: registry
    options:
      - mode=max
    
