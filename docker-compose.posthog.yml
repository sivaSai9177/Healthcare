version: '3.8'

# PostHog Self-Hosted Configuration
# Simplified setup for local development

services:
  # PostgreSQL for PostHog
  posthog-db:
    image: postgres:15-alpine
    container_name: posthog-postgres
    environment:
      POSTGRES_USER: posthog
      POSTGRES_PASSWORD: ${POSTHOG_DB_PASSWORD:-posthog}
      POSTGRES_DB: posthog
    volumes:
      - posthog_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U posthog"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - myexpo-local

  # Redis for PostHog caching
  posthog-redis:
    image: redis:7-alpine
    container_name: posthog-redis
    command: redis-server --maxmemory-policy allkeys-lru --maxmemory 200mb
    volumes:
      - posthog_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - myexpo-local

  # PostHog main application
  posthog:
    image: posthog/posthog:latest
    container_name: posthog
    depends_on:
      posthog-db:
        condition: service_healthy
      posthog-redis:
        condition: service_healthy
    environment:
      # Database connections
      DATABASE_URL: postgres://posthog:${POSTHOG_DB_PASSWORD:-posthog}@posthog-db:5432/posthog
      REDIS_URL: redis://posthog-redis:6379/
      
      # PostHog Configuration
      SECRET_KEY: ${POSTHOG_SECRET_KEY:-insecure-local-dev-key-change-in-production}
      SITE_URL: ${POSTHOG_SITE_URL:-http://localhost:8000}
      IS_BEHIND_PROXY: ${IS_BEHIND_PROXY:-false}
      DISABLE_SECURE_SSL_REDIRECT: ${DISABLE_SECURE_SSL_REDIRECT:-true}
      SECURE_COOKIES: ${SECURE_COOKIES:-false}
      
      # Development settings
      DEBUG: ${DEBUG:-0}
      CAPTURE_CONSOLE_LOG_ENABLED: true
      SESSION_RECORDING_ENABLED: true
      
      # Email (optional)
      EMAIL_ENABLED: ${EMAIL_ENABLED:-false}
      EMAIL_HOST: ${EMAIL_HOST:-}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-true}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-noreply@posthog.local}
      
      # Performance
      WEB_CONCURRENCY: ${POSTHOG_WEB_CONCURRENCY:-2}
      WORKER_CONCURRENCY: ${POSTHOG_WORKER_CONCURRENCY:-2}
    ports:
      - "${POSTHOG_PORT:-8000}:8000"
    volumes:
      - posthog_data:/var/lib/posthog
    networks:
      - myexpo-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/_health/"]
      interval: 10s
      timeout: 10s
      retries: 5

  # PostHog background worker
  posthog-worker:
    image: posthog/posthog:latest
    container_name: posthog-worker
    command: ./bin/docker-worker-celery --with-scheduler
    depends_on:
      posthog:
        condition: service_healthy
    environment:
      # Same environment as main app
      DATABASE_URL: postgres://posthog:${POSTHOG_DB_PASSWORD:-posthog}@posthog-db:5432/posthog
      REDIS_URL: redis://posthog-redis:6379/
      SECRET_KEY: ${POSTHOG_SECRET_KEY:-insecure-local-dev-key-change-in-production}
      SITE_URL: ${POSTHOG_SITE_URL:-http://localhost:8000}
    volumes:
      - posthog_data:/var/lib/posthog
    networks:
      - myexpo-local

networks:
  myexpo-local:
    external: true

volumes:
  posthog_postgres_data:
  posthog_redis_data:
  posthog_data: