name: Test Suite

on:
  push:
    branches: [main, develop, healthcare-mvp-backup]
  pull_request:
    branches: [main, develop]

env:
  NODE_ENV: test
  DATABASE_URL: postgresql://test:test@localhost:5432/test_db
  BETTER_AUTH_URL: http://localhost:3000
  BETTER_AUTH_SECRET: test-secret-for-ci
  EXPO_PUBLIC_API_URL: http://localhost:3000
  REDIS_URL: redis://localhost:6379
  WEBSOCKET_URL: ws://localhost:3002
  EMAIL_SERVICE_URL: http://localhost:3001

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'bun'

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run database migrations
      run: bun run db:migrate
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test_db

    - name: Run linting
      run: bun run lint
      continue-on-error: true # Allow linting errors for now

    - name: Run type checking
      run: bun run typecheck
      continue-on-error: true # Allow type errors for now

    - name: Run unit tests
      run: bun run test:healthcare:unit --coverage
      env:
        JEST_MAX_WORKERS: 2

    - name: Run integration tests
      run: bun run test:healthcare:integration --coverage
      env:
        JEST_MAX_WORKERS: 2
      continue-on-error: true # Allow integration test failures for now

    - name: Run component tests
      run: bun run test:healthcare:components --coverage
      env:
        JEST_MAX_WORKERS: 2
      continue-on-error: true # Allow component test failures for now

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-${{ matrix.node-version }}
      if: always()

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Tests
        path: 'test-results/*.xml'
        reporter: jest-junit
        fail-on-error: false

  e2e-web:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Install Playwright browsers
      run: bunx playwright install --with-deps

    - name: Run E2E tests
      run: bun run test:e2e:web
      continue-on-error: true

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: bun audit
      continue-on-error: true

    - name: Run OWASP dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'my-expo'
        path: '.'
        format: 'HTML'
      continue-on-error: true

  build-check:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Build project
      run: bun run build:web
      continue-on-error: true

    - name: Check bundle size
      run: |
        echo "Checking bundle size..."
        find dist -name "*.js" -type f -exec ls -lh {} \; | awk '{print $5, $9}'